{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","result","credentialFromResult","GithubAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","NweetTextRef","doc","id","onDeleteClick","window","confirm","deleteDoc","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","fileInput","useRef","nweet","setNweet","nweets","setNweets","attachment","setAttachment","useEffect","q","query","collection","orderBy","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","data","fileRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","createdAt","Date","now","creatorId","addDoc","current","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","key","Home","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","getFullYear","firebase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ab59f82.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();","import React, {useState} from \"react\";\r\nimport {authService} from \"fBase\";\r\nimport {createUserWithEmailAndPassword,GithubAuthProvider,GoogleAuthProvider,signInWithEmailAndPassword,signInWithPopup,} from \"@firebase/auth\";\r\nconst inputStyles = {};\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount,setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n      const {\r\n        target: { name, value },\r\n      } = event;\r\n      if (name === \"email\") {\r\n        setEmail(value);\r\n      } else if (name === \"password\") {\r\n        setPassword(value);\r\n      }\r\n    };\r\n    const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      try {\r\n        let data;\r\n        if(newAccount) {\r\n            const data = await createUserWithEmailAndPassword(authService, email, password);\r\n            } else {\r\n            const data = await signInWithEmailAndPassword(authService, email, password);\r\n            }\r\n        console.log(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n        target: { name },\r\n        } = event;\r\n        let provider;\r\n        try {\r\n        if (name === \"google\") {\r\n        provider = new GoogleAuthProvider();\r\n        const result = await signInWithPopup(authService, provider);\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n        } else if (name === \"github\") {\r\n        provider = new GithubAuthProvider();\r\n        const result = await signInWithPopup(authService, provider);\r\n        const credential = GithubAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n        }\r\n        } catch (error) {\r\n        console.log(error);\r\n        }\r\n        };\r\n    return (\r\n      <div>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n          />\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n          />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default AuthForm","import React, {useState} from \"react\";\r\nimport {authService} from \"fBase\";\r\nimport {createUserWithEmailAndPassword,GithubAuthProvider,GoogleAuthProvider,signInWithEmailAndPassword,signInWithPopup,} from \"@firebase/auth\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n \r\n    const onSocialClick = async (event) => {\r\n        const {\r\n        target: { name },\r\n        } = event;\r\n        let provider;\r\n        try {\r\n        if (name === \"google\") {\r\n        provider = new GoogleAuthProvider();\r\n        const result = await signInWithPopup(authService, provider);\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n        } else if (name === \"github\") {\r\n        provider = new GithubAuthProvider();\r\n        const result = await signInWithPopup(authService, provider);\r\n        const credential = GithubAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n        }\r\n        } catch (error) {\r\n        await authService.signInWithPopup(provider);\r\n        }\r\n        };\r\n    return (\r\n      <div className=\"authContainer\">\r\n      <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }}/>\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Auth","import React, { useState } from \"react\";\r\nimport { dbService ,storageService} from \"fBase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const NweetTextRef = doc(dbService, \"nweets\", `${nweetObj.id}`);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await deleteDoc(NweetTextRef);\r\n      if(nweetObj.attachmentUrl){\r\n        await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n      }\r\n      }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(NweetTextRef, {\r\n        text: newNweet,\r\n        });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","import { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport { addDoc, collection, getFirestore, onSnapshot, orderBy, query} from 'firebase/firestore';\r\nimport { ref, uploadString, getDownloadURL} from \"@firebase/storage\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst NweetFactory  = ({ userObj }) => {\r\n\r\n    const fileInput = useRef();\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [nweets, setNweets] = useState([]);\r\n    const [attachment, setAttachment] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        // 실시간으로 데이터를 데이터베이스에서 가져오기\r\n        const q = query(\r\n        collection(getFirestore(), 'nweets'),\r\n        // where('text', '==', 'hehe') // where뿐만아니라 각종 조건 이 영역에 때려부우면 됨\r\n        orderBy('createdAt',\"desc\")\r\n        );\r\n        const unsubscribe = onSnapshot(q, querySnapshot => {\r\n        const newArray = querySnapshot.docs.map(doc => {\r\n        return {\r\n        id: doc.id,\r\n        ...doc.data(),\r\n        };\r\n        });\r\n        setNweets(newArray);\r\n        console.log('Current tweets in CA: ', newArray);\r\n        });\r\n        return () => {\r\n        unsubscribe();\r\n        };\r\n        }, []);\r\n        \r\n        const onSubmit = async (event) => {\r\n            if (nweet === \"\") {\r\n                return;\r\n              }\r\n          event.preventDefault();\r\n          let attachmentUrl = \"\";\r\n          if (attachment !== \"\") {\r\n          //파일 경로 참조 만들기\r\n          const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n          //storage 참조 경로로 파일 업로드 하기\r\n          const uploadFile = await uploadString(fileRef, attachment, \"data_url\");\r\n          console.log(uploadFile);\r\n          //storage에 있는 파일 URL로 다운로드 받기\r\n          attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n          }\r\n          \r\n          //트윗할때, 메시지와 사진도 같이 firestore에 생성\r\n          const nweetObj = {\r\n          text: nweet,\r\n          createdAt: Date.now(),\r\n          creatorId: userObj.uid,\r\n          attachmentUrl,\r\n          };\r\n          await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n          setNweet(\"\");\r\n          setAttachment(\"\");\r\n          fileInput.current.value = \"\"; \r\n        };\r\n\r\n    const onChange = (event) => {\r\n      const {\r\n        target: { value },\r\n      } = event;\r\n      setNweet(value);\r\n    };\r\n    \r\n    const onFileChange = (event) => {\r\n        const {\r\n          target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n              } = finishedEvent;\r\n              setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n      };\r\n\r\n      \r\n      const onClearAttachment = () => { \r\n        setAttachment(\"\");\r\n        fileInput.current.value = \"\"; \r\n      };\r\n\r\n\r\n    return (\r\n      <div>\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">        \r\n      <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n          <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n          />\r\n\r\n          {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n        <img\r\n          src={attachment}\r\n          style={{\r\n            backgroundImage: attachment,\r\n          }}\r\n        />\r\n        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n          <span>Remove</span>\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </div>\r\n          </div>\r\n        )}\r\n        </form>\r\n        <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n          key={nweet.id}\r\n          nweetObj={nweet}\r\n          isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n      </div>\r\n    );\r\n  };\r\nexport default NweetFactory ; ","import { dbService, storageService } from \"fBase\";\r\nimport { addDoc, collection, getFirestore, onSnapshot, orderBy, query} from 'firebase/firestore';\r\nimport { ref, uploadString, getDownloadURL} from \"@firebase/storage\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\n\r\nconst Home = ({ userObj }) => {\r\n\r\n    const fileInput = useRef();\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // 실시간으로 데이터를 데이터베이스에서 가져오기\r\n        const q = query(\r\n        collection(getFirestore(), 'nweets'),\r\n        // where('text', '==', 'hehe') // where뿐만아니라 각종 조건 이 영역에 때려부우면 됨\r\n        orderBy('createdAt',\"desc\")\r\n        );\r\n        const unsubscribe = onSnapshot(q, querySnapshot => {\r\n        const newArray = querySnapshot.docs.map(doc => {\r\n        return {\r\n        id: doc.id,\r\n        ...doc.data(),\r\n        };\r\n        });\r\n        setNweets(newArray);\r\n        console.log('Current tweets in CA: ', newArray);\r\n        });\r\n        return () => {\r\n        unsubscribe();\r\n        };\r\n        }, []);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <NweetFactory userObj={userObj} />\r\n        <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n          key={nweet.id}\r\n          nweetObj={nweet}\r\n          isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n      </div>\r\n    );\r\n  };\r\nexport default Home; ","import React,{useState} from \"react\";\r\nimport { authService } from \"fBase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\n\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName){\r\n      await updateProfile(authService.currentUser, { displayName: newDisplayName });\r\n      refreshUser();\r\n      }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n              marginTop: 10,\r\n            }}\r\n          />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n          style={{\r\n            maxWidth: 890,\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            marginTop: 80,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n            <Route exact path=\"/\">\r\n             <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n             <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fBase\";\nimport { updateProfile } from \"@firebase/auth\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => updateProfile(user, { displayName: user.displayName }),\n          });\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => updateProfile(user, { displayName: user.displayName }),\n      });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\nimport \"./styles.css\";\n\nconsole.log(firebase)\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}